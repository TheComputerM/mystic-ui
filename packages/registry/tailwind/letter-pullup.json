{"id":"letter-pullup","dependencies":["motion"],"content":"import { cn } from \"@/lib/utils\";\nimport { animate, inView, stagger } from \"motion\";\nimport { type Component, For, mergeProps, onCleanup, onMount } from \"solid-js\";\n\nexport interface LetterPullupProps {\n\ttext: string;\n\tclass?: string;\n\tdelay?: number;\n}\n\nexport const LetterPullup: Component<LetterPullupProps> = (props) => {\n\tconst localProps = mergeProps({ delay: 0.05 }, props);\n\tlet container!: HTMLDivElement;\n\n\tonMount(() => {\n\t\tconst stop = inView(container, (info) => {\n\t\t\tanimate(\n\t\t\t\tArray.from(info.target.children),\n\t\t\t\t{\n\t\t\t\t\ty: [100, 0],\n\t\t\t\t\topacity: [0, 1],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tdelay: stagger(localProps.delay),\n\t\t\t\t},\n\t\t\t);\n\t\t});\n\n\t\tonCleanup(() => stop());\n\t});\n\n\treturn (\n\t\t<div class={cn(\"flex\", localProps.class)} ref={container}>\n\t\t\t<For each={localProps.text.split(\"\")}>\n\t\t\t\t{(letter, i) => (\n\t\t\t\t\t<div\n\t\t\t\t\t// initial={{ y: 100, opacity: 0 }}\n\t\t\t\t\t// inView={{ y: 0, opacity: 1 }}\n\t\t\t\t\t// inViewOptions={{ once: true }}\n\t\t\t\t\t// transition={{\n\t\t\t\t\t// \tdelay: i() * localProps.delay,\n\t\t\t\t\t// }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{letter === \" \" ? <span>&nbsp;</span> : letter}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</For>\n\t\t</div>\n\t);\n};\n"}