{"id":"no-signal-screen","content":"import { cx, css } from \"styled-system/css\";\nimport {\n\tcreateEffect,\n\tmergeProps,\n\tsplitProps,\n\ttype Component,\n\ttype JSX,\n} from \"solid-js\";\n\nexport interface NoSignalScreenProps\n\textends JSX.CanvasHTMLAttributes<HTMLCanvasElement> {\n\tframeRate?: number;\n}\n\nexport const NoSignalScreen: Component<NoSignalScreenProps> = (props) => {\n\tconst [_localProps, forwardProps] = splitProps(props, [\"frameRate\", \"class\"]);\n\tconst localProps = mergeProps({ frameRate: 30 }, _localProps);\n\tlet canvasRef!: HTMLCanvasElement;\n\n\tcreateEffect(() => {\n\t\tconst canvas = canvasRef;\n\t\tif (!canvas) return;\n\n\t\tconst ctx = canvas.getContext(\"2d\");\n\t\tif (!ctx) return;\n\n\t\tconst resizeCanvas = () => {\n\t\t\tcanvas.width = window.innerWidth;\n\t\t\tcanvas.height = window.innerHeight;\n\t\t};\n\n\t\tresizeCanvas();\n\t\twindow.addEventListener(\"resize\", resizeCanvas);\n\n\t\tlet animationFrameId: number;\n\t\tlet lastTime = 0;\n\t\tconst interval = 1000 / localProps.frameRate;\n\n\t\tconst drawNoise = (currentTime: number) => {\n\t\t\tanimationFrameId = requestAnimationFrame(drawNoise);\n\n\t\t\tif (currentTime - lastTime < interval) return;\n\t\t\tlastTime = currentTime;\n\n\t\t\tconst imageData = ctx.createImageData(canvas.width, canvas.height);\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor (let i = 0; i < data.length; i += 4) {\n\t\t\t\tconst value = Math.floor(Math.random() * 256);\n\t\t\t\tdata[i] = value; // red\n\t\t\t\tdata[i + 1] = value; // green\n\t\t\t\tdata[i + 2] = value; // blue\n\t\t\t\tdata[i + 3] = 255; // alpha\n\t\t\t}\n\n\t\t\tctx.putImageData(imageData, 0, 0);\n\t\t};\n\n\t\tanimationFrameId = requestAnimationFrame(drawNoise);\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener(\"resize\", resizeCanvas);\n\t\t\tcancelAnimationFrame(animationFrameId);\n\t\t};\n\t});\n\n\treturn (\n\t\t<canvas\n\t\t\tref={canvasRef}\n\t\t\tclass={cx(\n\t\t\t\tcss({\n\t\t\t\t\tpointerEvents: \"none\",\n\t\t\t\t\topacity: 0.5,\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\tinset: 0,\n          width: \"full\",\n          height: \"full\",\n\t\t\t\t}),\n\t\t\t\tlocalProps.class,\n\t\t\t)}\n\t\t\t{...forwardProps}\n\t\t/>\n\t);\n};\n"}