{"name":"typing-animation","tailwind":{"file":"import {\n\ttype Component,\n\tcreateEffect,\n\tcreateSignal,\n\tmergeProps,\n} from \"solid-js\";\n\nexport interface TypingAnimationProps {\n\ttext: string;\n\tduration?: number;\n}\n\nexport const TypingAnimation: Component<TypingAnimationProps> = (props) => {\n\tconst localProps = mergeProps({ duration: 200 }, props);\n\tconst [displayedText, setDisplayedText] = createSignal<string>(\"\");\n\tconst [i, setI] = createSignal<number>(0);\n\n\tcreateEffect(() => {\n\t\tconst typingEffect = setInterval(() => {\n\t\t\tif (i() < localProps.text.length) {\n\t\t\t\tsetDisplayedText(localProps.text.substring(0, i() + 1));\n\t\t\t\tsetI((i) => i + 1);\n\t\t\t} else {\n\t\t\t\tclearInterval(typingEffect);\n\t\t\t}\n\t\t}, localProps.duration);\n\n\t\treturn () => {\n\t\t\tclearInterval(typingEffect);\n\t\t};\n\t});\n\n\treturn <>{displayedText()}</>;\n};\n"},"panda":{"file":"import {\n\ttype Component,\n\tcreateEffect,\n\tcreateSignal,\n\tmergeProps,\n} from \"solid-js\";\n\nexport interface TypingAnimationProps {\n\ttext: string;\n\tduration?: number;\n}\n\nexport const TypingAnimation: Component<TypingAnimationProps> = (props) => {\n\tconst localProps = mergeProps({ duration: 200 }, props);\n\tconst [displayedText, setDisplayedText] = createSignal<string>(\"\");\n\tconst [i, setI] = createSignal<number>(0);\n\n\tcreateEffect(() => {\n\t\tconst typingEffect = setInterval(() => {\n\t\t\tif (i() < localProps.text.length) {\n\t\t\t\tsetDisplayedText(localProps.text.substring(0, i() + 1));\n\t\t\t\tsetI((i) => i + 1);\n\t\t\t} else {\n\t\t\t\tclearInterval(typingEffect);\n\t\t\t}\n\t\t}, localProps.duration);\n\n\t\treturn () => {\n\t\t\tclearInterval(typingEffect);\n\t\t};\n\t});\n\n\treturn <>{displayedText()}</>;\n};\n"}}